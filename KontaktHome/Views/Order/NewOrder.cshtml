@using Entities
@model Orders
@{
    ViewBag.Title = "NewOrder";
}

<div class="content  ">
    <div class="container">
        <!-- /.left panel -->
        <div class="col-md-12">
            @if (TempData["msg"] != null)
            {
                <script>
                var message = '@TempData["msg"].ToString()';
                var type='@TempData["typ"].ToString()';
                Swal.fire(
                   message,
                    '',
                    type
                )
                </script>
            }

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-group col-lg-12">
                    @*@Html.ValidationSummary(false)*@
                </div>
                <div class="card card-secondary">
                    <div class="card-header">
                        <h3 class="card-title">Müştəri Məlumatları</h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Ad</label>
                                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", id = "customername", placeholder = "Ad ..." } })
                                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Soyad</label>
                                    @Html.EditorFor(model => model.CustomerSurname, new { htmlAttributes = new { @class = "form-control", id = "customersurname", placeholder = "Soyad ..." } })
                                    @Html.ValidationMessageFor(model => model.CustomerSurname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Ata Adı</label>
                                    @Html.EditorFor(model => model.CustomerFatherName, new { htmlAttributes = new { @class = "form-control", id = "customerfname", placeholder = "Ata Adı ..." } })
                                    @Html.ValidationMessageFor(model => model.CustomerFatherName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Telefon 1</label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                        </div>
                                        @Html.EditorFor(model => model.Tel1, new { htmlAttributes = new { @class = "form-control", id = "telno1" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Tel1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Telefon 2</label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                        </div>
                                        @Html.EditorFor(model => model.Tel2, new { htmlAttributes = new { @class = "form-control", id = "telno2" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Tel2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Ünvan</label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fas fa-map-marked-alt"></i></span>
                                        </div>
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", id = "customeraddress", placeholder = "Ünvan ..." } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Nişangah</label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <button class="btn btn-info" type="button" id="button-addon1" data-toggle="modal" data-target="#exampleModalCenter"><i class="fas fa-map-marker-alt"></i></button>
                                        </div>
                                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", id = "addresslocation", @placeholder = "Nişangah ...", @readonly = "readonly" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6" id="sandbox-container">
                                <div class="form-group">
                                    <label>Vizit Tarixi</label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="far fa-calendar-alt"></i></span>
                                        </div>
                                        @Html.EditorFor(model => model.VisitDate, new { htmlAttributes = new { @class = "form-control", id = "visitdate" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.VisitDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12"></div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Məhsul Sayı</label>
                                    @Html.EditorFor(model => model.ItemCount, new { htmlAttributes = new { @class = "form-control", id = "itemCount", placeholder = "Məhsul Sayı ..." } })
                                    @Html.ValidationMessageFor(model => model.ItemCount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label>Qeyd</label>
                                    @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control", id = "", placeholder = "Məhsul Qeydi ..." } })
                                    @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12"></div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Sifariş Növü</label>
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(model => model.OrderType1, new { @class = "custom-control-input", @type = "checkbox", @id = "customCheckbox1" })
                                        @Html.LabelFor(c => c.OrderType1, new { @class = "custom-control-label", @for = "customCheckbox1" })
                                    </div>
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(model => model.OrderType2, new { @class = "custom-control-input", @type = "checkbox", @id = "customCheckbox2" })
                                        @Html.LabelFor(c => c.OrderType2, new { @class = "custom-control-label", @for = "customCheckbox2" })
                                    </div>
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(model => model.OrderType3, new { @class = "custom-control-input", @type = "checkbox", @id = "customCheckbox3" })
                                        @Html.LabelFor(c => c.OrderType3, new { @class = "custom-control-label", @for = "customCheckbox3" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Təxmini Qiymət</label>
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", id = "orderPrice", placeholder = "Qiymət ..." } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12">
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(model => model.CustomerWillAnswer, new { @class = "custom-control-input", @type = "checkbox", @id = "custWillAnswer" })
                                        @Html.LabelFor(c => c.CustomerWillAnswer, new { @class = "custom-control-label", @for = "custWillAnswer" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Qeyd</label>
                                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @rows = "3", id = "note", placeholder = "Qeyd ..." } })
                                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary float-right">Sorğunu Tamamla</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header justify-content-center">
                <ul class="nav nav-pills">
                    @for (int i = 0; i < ViewBag.LocationGroup.Count; i++)
                    {
                        if (i == 0)
                        {
                            <li class="nav-item"><a class="nav-link active" data-toggle="pill" href="#@ViewBag.LocationGroup[i].Value.Replace(" ", "")">@ViewBag.LocationGroup[i].Value</a></li>
                        }
                        else
                        {
                            <li class="nav-item"><a class="nav-link" data-toggle="pill" href="#@ViewBag.LocationGroup[i].Value.Replace(" ", "")">@ViewBag.LocationGroup[i].Value</a></li>
                        }
                    }                   
                </ul>
            </div>
            <div class="modal-body">
                <div class="tab-content mt-2">
                    @for (int i = 0; i < ViewBag.LocationGroup.Count; i++)
                    {
                        if (i == 0)
                        {
                            <div id="@ViewBag.LocationGroup[i].Value.Replace(" ", "")" class="tab-pane fade show active">
                                <ul class="location_list">
                                    @foreach (var item in ViewBag.LocationSubGroup)
                                    {
                                        if (item.GroupID == ViewBag.LocationGroup[i].ID)
                                        {
                                            <li class="location_list_item-wrap">
                                                <span class="location_title">@item.Value</span>
                                                @foreach (var names in ViewBag.LocationNames)
                                                {
                                                    if (names.SubGroupID == item.ID)
                                                    {
                                                        <span class="location_list_item" onClick="setText(this)" data-dismiss="modal">@names.Value</span>
                                                    }
                                                }
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        }
                        else
                        {
                            <div id="@ViewBag.LocationGroup[i].Value.Replace(" ", "")" class="tab-pane fade">
                                <ul class="location_list">
                                    @foreach (var item in ViewBag.LocationSubGroup)
                                    {
                                        if (item.GroupID == ViewBag.LocationGroup[i].ID)
                                        {
                                            <li class="location_list_item-wrap">
                                                <span class="location_title">@item.Value</span>
                                                @foreach (var names in ViewBag.LocationNames)
                                                {
                                                    if (names.SubGroupID == item.ID)
                                                    {
                                                        <span class="location_list_item" onClick="setText(this)" data-dismiss="modal">@names.Value</span>
                                                    }
                                                }
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        }
                    }                   
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Bağla</button>
            </div>
        </div>
    </div>
</div>
@section JavaScript{
    <script>
        function setText(obj) {
            var t = $(obj).text();
            document.getElementById("addresslocation").value = t;
        }
        document.getElementById('sidemenu1').className = 'nav-item has-treeview menu-open';
        document.getElementById('sidemenu1_1').className = 'nav-link active';
        document.getElementById('newOrder').className = 'nav-link active';
    </script>
}




