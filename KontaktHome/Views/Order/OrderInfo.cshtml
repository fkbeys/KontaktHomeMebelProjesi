@using Entities
@using KontaktHome.Models
@model Orders
@{
    ViewBag.Title = "OrderInfo";
}

<div class="content  ">
    <div class="container">
        <!-- /.left panel -->
        <div class="col-md-12">


            <div class="card card-secondary">
                <div class="card-header">
                    <h3 class="card-title">Müştəri Məlumatları</h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (Model.IsActive == false)
                        {
                            <div class="col-md-12">
                                <label>Status :</label>
                                <label class="text-secondary">Bağlı</label>
                            </div>
                        }
                        <div class="col-sm-12  border-bottom border-info pb-1 mb-1">
                            <label>Siafriş Status: </label>
                            <label class="text-secondary">@BusinessLayer.QueryResult.Statuses.OrderStatus(Model.OrderStatus)</label>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Sifariş Nömrəsi</label>
                                @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control", id = "", placeholder = "", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Mağaza</label>
                                @Html.EditorFor(model => model.OrderStore, new { htmlAttributes = new { @class = "form-control", id = "", placeholder = "", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Satıcı Kodu</label>
                                @Html.EditorFor(model => model.SellerCode, new { htmlAttributes = new { @class = "form-control", id = "", placeholder = "", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Ad</label>
                                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", id = "customername", placeholder = "Ad ...", @readonly = "readonly" } })

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Soyad</label>
                                @Html.EditorFor(model => model.CustomerSurname, new { htmlAttributes = new { @class = "form-control", id = "customersurname", placeholder = "Soyad ...", @readonly = "readonly" } })

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Ata Adı</label>
                                @Html.EditorFor(model => model.CustomerFatherName, new { htmlAttributes = new { @class = "form-control", id = "customerfname", placeholder = "Ata Adı ...", @readonly = "readonly" } })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Telefon 1</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.Tel1, new { htmlAttributes = new { @class = "form-control", id = "telno1", @readonly = "readonly" } })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Telefon 2</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.Tel2, new { htmlAttributes = new { @class = "form-control", id = "telno2", @readonly = "readonly" } })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Ünvan</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-map-marked-alt"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", id = "customeraddress", placeholder = "Ünvan ...", @readonly = "readonly" } })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Nişangah</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <button class="btn btn-info" type="button" id="button-addon1" data-toggle="modal" data-target="#musteriModal"><i class="fas fa-map-marker-alt"></i></button>
                                    </div>
                                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", id = "addresslocation", @placeholder = "Nişangah ...", @readonly = "readonly" } })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-6" id="sandbox-container">
                            <div class="form-group">
                                <label>Vizit Tarixi</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="far fa-calendar-alt"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.VisitDate, new { htmlAttributes = new { @class = "form-control", id = "visitdate", @readonly = "readonly" } })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-12"></div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Məhsul Sayı</label>
                                @Html.EditorFor(model => model.ItemCount, new { htmlAttributes = new { @class = "form-control", id = "itemCount", placeholder = "Məhsul Sayı ...", @readonly = "readonly" } })

                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="form-group">
                                <label>Qeyd</label>
                                @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control", id = "", placeholder = "Məhsul Qeydi ...", @readonly = "readonly" } })

                            </div>
                        </div>
                        <div class="col-md-12"></div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Sifariş Növü</label>
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(model => model.OrderType1, new { @class = "custom-control-input", @type = "checkbox", @id = "customCheckbox1", @disabled = "disabled" })
                                    @Html.LabelFor(c => c.OrderType1, new { @class = "custom-control-label", @for = "customCheckbox1" })
                                </div>
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(model => model.OrderType2, new { @class = "custom-control-input", @type = "checkbox", @id = "customCheckbox2", @disabled = "disabled" })
                                    @Html.LabelFor(c => c.OrderType2, new { @class = "custom-control-label", @for = "customCheckbox2" })
                                </div>
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(model => model.OrderType3, new { @class = "custom-control-input", @type = "checkbox", @id = "customCheckbox3", @disabled = "disabled" })
                                    @Html.LabelFor(c => c.OrderType3, new { @class = "custom-control-label", @for = "customCheckbox3" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Təxmini Qiymət</label>
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", id = "orderPrice", placeholder = "Qiymət ...", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Qeyd</label>
                                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @rows = "3", id = "note", placeholder = "Qeyd ...", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    @if (HttpContext.Current.User.IsInRole("Vizitor"))
                    {
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(model => model.IsVisitorAdded, new { @class = "custom-control-input", @id = "chkboxSetVisitor", @onchange = "cmbSelectVistorChange()", @type = "checkbox", @disabled = "disabled" })
                                    @Html.LabelFor(model => model.IsVisitorAdded, new { @for = "chkboxSetVisitor", @class = "custom-control-label" })
                                </div>
                            </div>
                        </div>
                        <div class="row mt-1" id="containerVisitor">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Vizitor Adı</label>
                                    <div class="col-form-txt">
                                        @Html.DropDownList("Visitor", (ViewBag.Visitor as SelectList), "", new { @class = "form-control", @id = "visitorCode", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(model => model.IsDesignerAdded, new { @class = "custom-control-input", @id = "chkboxSetDesigner", @onchange = "cmbSelectDesignerChange()", @type = "checkbox", @disabled = "disabled" })
                                    @Html.LabelFor(model => model.IsDesignerAdded, new { @for = "chkboxSetDesigner", @class = "custom-control-label" })
                                </div>
                            </div>
                        </div>
                        <div class="row mt-1" id="containerDesigner">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Dizayner Adı</label>
                                    <div class="col-form-txt">
                                        @Html.DropDownList("Designer", (ViewBag.Designer as SelectList), "", new { @class = "form-control", @id = "designerCode", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.IsActive == false)
                    {
                        <div class="row mt-1">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Bağlama Səbəbi</label>
                                    @Html.EditorFor(model => model.CloseReason, new { htmlAttributes = new { @class = "form-control", @rows = "3", id = "", placeholder = "Bağlama səbəbi ..." } })
                                    @Html.ValidationMessageFor(model => model.CloseReason, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    }
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="custom-control custom-checkbox">
                                @Html.CheckBoxFor(model => model.IsCompleted, new { @class = "custom-control-input", @id = "chkCompleted", @type = "checkbox", @disabled = "disabled" })
                                @Html.LabelFor(model => model.IsCompleted, new { @for = "chkCompleted", @class = "custom-control-label" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Faktura Nömrəsi</label>
                                @Html.EditorFor(model => model.InvoiceNo, new { htmlAttributes = new { @class = "form-control", id = "", placeholder = "Faktura Nömrəsi ...", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    @if (HttpContext.Current.User.IsInRole("Kordinator") || HttpContext.Current.User.IsInRole("Admin"))
                    {
                        @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalLong">
                            Dəyişən Qeydlər_Old
                        </button>*@
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#logModal" onclick="LoadLogs('@Model.OrderId')">
                            Dəyişən Qeydlər
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
@if (HttpContext.Current.User.IsInRole("Kordinator") || HttpContext.Current.User.IsInRole("Admin"))
{
    @*<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Dəyişən Qeydlər</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Sütun</th>
                                <th scope="col">Köhnə Dəyər</th>
                                <th scope="col">Yeni Dəyər</th>
                                <th scope="col">Dəyişmə Tarixi</th>
                                <th scope="col">Dəyişən İstifadəçi</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ViewBag.ChangeLog)
                            {
                                <tr>
                                    <th>@item.PropertyName</th>
                                    <td>@item.OldValue</td>
                                    <td>@item.NewValue</td>
                                    <td>@item.DateChanged</td>
                                    <td>@item.ChangedUser</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Bağla</button>
                </div>
            </div>
        </div>
    </div>*@
    <!-- Modal -->
    <div class="modal fade" id="logModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Dəyişən Qeydlər</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="table-responsive">
                        <table id="tableLogs" class="display" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th >Sütun</th>
                                    <th >Köhnə Dəyər</th>
                                    <th >Yeni Dəyər</th>
                                    <th >Dəyişmə Tarixi</th>
                                    <th >Dəyişən İstifadəçi</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Bağla</button>
                </div>
            </div>
        </div>
    </div>
}
@section JavaScript{
    <script>
    document.getElementById('visitorCode').value='@Model.VisitorCode';
        document.getElementById('designerCode').value = '@Model.DesignerCode';
        function LoadLogs(orderId) {
            $('#tableLogs').DataTable({
                "destroy": "true",
                "ajax": {
                    "url": "../Order/GetChangeLog",
                    "cache": "false",
                    "type": "POST",
                    "dataSrc": "",
                    "data": { orderid: orderId }
                },
                "columns": [
                    { "data": "0" },
                    { "data": "1" },
                    { "data": "2" },
                    { "data": "3" },
                    { "data": "4" }
                ],
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Azerbaijan.json"
                }
            });
            //$('#tableLogs').DataTable({
            //    "destroy": "true",
            //    "ajax": {
            //        "url": "../Order/GetChangeLog",
            //        "cache": "false",
            //        "type": "POST",
            //        "datatype": "json",
            //        "data": { orderid: orderId }
            //    },
            //    "columns": [
            //        { "data": "PropertyName" },
            //        { "data": "OldValue" },
            //        { "data": "NewValue" },
            //        { "data": "DateChanged" },
            //        { "data": "ChangedUser" }
            //    ],
            //    "language": {
            //        "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Azerbaijan.json"
            //    }
            //});
        }
    </script>
}

